apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext {
    versionNameBase = '0.1.0'

    environments = [
            production: [
                    appName             : 'HelloMvvm',
                    applicationId       : 'com.sven.hello',
                    environment         : 'production',
                    apiBaseUrl          : 'https://app.sven.com/api/',
                    enableLogHttp       : false,
                    manifestPlaceholders: [
                            urlScheme: "sven",
                    ]
            ],

            dev       : [
                    appName             : 'HelloDevMvvm',
                    applicationId       : 'com.sven.hello.dev',
                    environment         : 'staging',
                    apiBaseUrl          : 'https://app-staging.sven.com/api/',
                    enableLogHttp       : true,
                    manifestPlaceholders: [
                            urlScheme: "sven-staging",
                    ]
            ]
    ]
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
        pickFirst 'publicsuffixes.gz'
    }

    defaultConfig {
        applicationId "com.sven"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // versionName - see ext.versionNameBase (applied by common-ci.gradle)
        // versionCode - see ext.versionNameBase (applied by common-ci.gradle)

        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "environment"
    productFlavors {
        environments.each { name, config ->
            "$name" {
                dimension "environment"

                applicationId = config.applicationId

                resValue "string", "app_name", config.appName

                buildConfigField "String", "API_BASE_URL", "\"${config.apiBaseUrl}\""

                // enabled for all debug builds
                buildConfigField "boolean", "ENABLE_LOG_HTTP", "${config.enableLogHttp} || DEBUG"

                manifestPlaceholders << config.manifestPlaceholders
                config.manifestPlaceholders.each {
                    buildConfigField "String", "MANIFEST_PLACEHOLDER_${it.key.toUpperCase()}", "\"${it.value}\""
                }
            }
        }
    }

    dexOptions {
        preDexLibraries rootProject.preDexLibraries

        // required for test to build
        javaMaxHeapSize "2g"

        // Makes string ids up to 2^32 instead of 2^16 (does not affect method limit)
        jumboMode = true
    }

    lintOptions {
        abortOnError false // TEMPORARY until we can fix all lint errors
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        // Android support libraries
        implementation "androidx.appcompat:appcompat:1.2.0"
        implementation "androidx.annotation:annotation:${rootProject.supportLibraryVersion}"
        implementation "androidx.legacy:legacy-support-v13:${rootProject.supportLibraryVersion}"
        implementation "androidx.constraintlayout:constraintlayout:2.0.1"

        // Firebase Crash Reporting
        implementation 'com.google.firebase:firebase-crashlytics:17.2.1'

        // Retrofit
        implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
        implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
        implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
        implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

        // Reactive Extensions
        implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
        implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
        implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

        // Logging
        implementation 'com.jakewharton.timber:timber:4.5.1'

        // Dependency Injection
        implementation 'com.google.guava:guava:27.0.1-android'
        implementation "com.google.dagger:dagger:$daggerVersion"
        implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
        kapt "com.google.dagger:dagger-compiler:$daggerVersion"
        kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"

        // Databinding
        kapt 'com.android.databinding:compiler:3.1.4'
    }
}
